/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AboutRouteImport } from './routes/about'
import { Route as ProductRouteImport } from './routes/Product'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProductPidRouteImport } from './routes/Product.$pid'

const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductRoute = ProductRouteImport.update({
  id: '/Product',
  path: '/Product',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductPidRoute = ProductPidRouteImport.update({
  id: '/$pid',
  path: '/$pid',
  getParentRoute: () => ProductRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/Product': typeof ProductRouteWithChildren
  '/about': typeof AboutRoute
  '/Product/$pid': typeof ProductPidRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/Product': typeof ProductRouteWithChildren
  '/about': typeof AboutRoute
  '/Product/$pid': typeof ProductPidRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/Product': typeof ProductRouteWithChildren
  '/about': typeof AboutRoute
  '/Product/$pid': typeof ProductPidRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/Product' | '/about' | '/Product/$pid'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/Product' | '/about' | '/Product/$pid'
  id: '__root__' | '/' | '/Product' | '/about' | '/Product/$pid'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProductRoute: typeof ProductRouteWithChildren
  AboutRoute: typeof AboutRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/Product': {
      id: '/Product'
      path: '/Product'
      fullPath: '/Product'
      preLoaderRoute: typeof ProductRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/Product/$pid': {
      id: '/Product/$pid'
      path: '/$pid'
      fullPath: '/Product/$pid'
      preLoaderRoute: typeof ProductPidRouteImport
      parentRoute: typeof ProductRoute
    }
  }
}

interface ProductRouteChildren {
  ProductPidRoute: typeof ProductPidRoute
}

const ProductRouteChildren: ProductRouteChildren = {
  ProductPidRoute: ProductPidRoute,
}

const ProductRouteWithChildren =
  ProductRoute._addFileChildren(ProductRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProductRoute: ProductRouteWithChildren,
  AboutRoute: AboutRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
